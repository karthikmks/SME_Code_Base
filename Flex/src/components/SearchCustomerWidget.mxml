<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				layout="absolute" width="600" height="400"
				showCloseButton="true" title="Select Customer">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import util.SMEModel;
			
			import org.puremvc.as3.multicore.patterns.facade.Facade;
			
			import util.SMEConstants;
			import valueobject.CustomerVO;
			[Bindable]
			public var selectedCustomer:CustomerVO;
			[Bindable]
			public var isCustomerUpdateFlow:Boolean = false;
			[Bindable]
			public var isLinkedIdFlow:Boolean = false;
			[Bindable]
			public var customerListColl:ArrayCollection;
			
			private var facade:Facade=ApplicationFacade.getInstance(SME.MAIN_APPLN);
			
			protected function selectCustomerBtn_clickHandler(event:MouseEvent):void
			{
				facade.sendNotification(SMEConstants.CUSTOMER_SELECTED,selectedCustomer);
			}
			
			public function setSearchResultData(customerList:ArrayCollection):void
			{
				customerListColl = customerList;
				//ArrayCollection(customerGrid.dataProvider).refresh();
				customerGrid.visible=true;
				selectCustomerBtn.visible=true;
			}
			
			public function searchCustomerBtn_clickHandler(event:Event):void
			{
				var customerVO:CustomerVO = new CustomerVO;
				if(customerSearchValue.text!=null && customerSearchValue.text!=""){
					customerVO[searchCriteriaCmb.selectedItem.value] = customerSearchValue.text;
					customerVO.allBranchIds = SMEModel.getinstance().userProfileVO.branchId;
					if(isLinkedIdFlow){
                        var searchObj:Object = new Object;
                        searchObj.isUpdateFlow = isCustomerUpdateFlow;
                        searchObj.customerVo = customerVO;
                        facade.sendNotification(SMEConstants.LINKED_OR_REFERRAL_CUSTOMER_SEARCH,searchObj);
                    }else if(isCustomerUpdateFlow){
						facade.sendNotification(SMEConstants.UPDATE_FLOW_CUSTOMER_SEARCH,customerVO);
					}else{
						facade.sendNotification(SMEConstants.SEARCH_CUSTOMER,customerVO);
					}
				}else{
					Alert.show("Please Enter Valid Customer ID or Name","Error");
				}
				
			}
			protected function clearCustomerBtn_clickHandler(event:MouseEvent):void
			{
				customerSearchValue.text="";
				customerListColl = new ArrayCollection();
				customerGrid.visible=false;
				selectCustomerBtn.visible=false;
			}
			
			private function customerAddressFunction(item:Object, column:DataGridColumn):String{
				if(cusVO!=null && item as CustomerVO){
					if(cusVO.address!=null){
						var cusVO:CustomerVO = item as CustomerVO;
						var addr:String  = cusVO.address.split("\n").join(", ");
						return addr;
					}
				}
				return "Not Available";
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here --><mx:RadioButtonGroup id="rbtGroup" />
	</fx:Declarations>
	<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingBottom="10" paddingTop="10">
		<mx:HBox width="100%">
			<mx:Label id="searchLabel" text="Search By" />
			<mx:ComboBox id="searchCriteriaCmb" labelField="label"
						dataProvider="{SMEConstants.CUSTOMER_SEARCH_ARRAY}"/>
				
			<!--<mx:Spacer width="10" />
			<mx:ComboBox id="customerNameCriteriaCmb" includeInLayout="false" visible="false" >
				<mx:ArrayList>
					<fx:String>Starts with</fx:String>
					<fx:String>Contains</fx:String>
				</mx:ArrayList>
			</mx:ComboBox>-->
			
			<mx:TextInput id="customerSearchValue" width="150" enter="searchCustomerBtn_clickHandler(event)"/>
			<mx:Spacer width="20" />
			<mx:Button id="searchCustomerBtn" click="searchCustomerBtn_clickHandler(event)" label="Search" />
			<mx:Button id="clearCustomerBtn" click="clearCustomerBtn_clickHandler(event)" label="Clear" />
		</mx:HBox>
		<mx:DataGrid id="customerGrid" width="100%" height="100%" styleName="smeDatagrid"
					 visible="false" dataProvider="{customerListColl}">
			<mx:columns>
				<mx:DataGridColumn width="20">
					<mx:itemRenderer>
						<fx:Component>
							<mx:HBox height="100%" horizontalAlign="center" verticalAlign="middle">
								<fx:Declarations>
									<mx:RadioButtonGroup id="rbtGroup" />
								</fx:Declarations>
								<fx:Script>
									<![CDATA[
										import valueobject.CustomerVO;
                                        protected function radiobutton_clickHandler(event:MouseEvent):void
                                        {
                                            outerDocument.selectCustomerBtn.enabled=true;
                                            outerDocument.selectedCustomer = CustomerVO(outerDocument.customerGrid.selectedItem);
                                        }
									]]>
								</fx:Script>
								
								<mx:RadioButton height="8" click="radiobutton_clickHandler(event)" group="{rbtGroup}"/>
							</mx:HBox>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="Customer ID" dataField="customerId" />
				<mx:DataGridColumn headerText="Customer Name" dataField="customerName" />
				<mx:DataGridColumn headerText="Address"  labelFunction="customerAddressFunction" />
			</mx:columns>	
		</mx:DataGrid>
		<s:HGroup width="100%" verticalAlign="middle">
			<mx:Spacer width="100%" />
			<mx:Button id="selectCustomerBtn" label="Select" enabled="false" visible="false"/>
		</s:HGroup>
	</mx:VBox>
</mx:TitleWindow>
