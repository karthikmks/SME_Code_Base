<?xml version="1.0" encoding="utf-8"?>
<mx:FormItem xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" 
			 direction="vertical"
			 styleName="smeFormItem" 
			 xmlns:components="components.*"
			 creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			
			import org.puremvc.as3.multicore.patterns.facade.Facade;
			
			import util.SMEConstants;
			import util.SMEModel;
			
			private var facade:Facade = ApplicationFacade.getInstance(SME.MAIN_APPLN);
			private var fileReference:FileReferenceList = new FileReferenceList();
			public var docCollection:ArrayCollection = new ArrayCollection; 
			
			public var docName:String = "";
			public var uiCompId:int;
			private static var numOfDoc:int = 0;
			
			protected function docLoanAppln_clickHandler(event:MouseEvent):void{
				uploadDoc();
			}
			
			private function uploadDoc():void{
				var arr:Array = [];
				arr.push(new FileFilter("Docs", SMEConstants.DOC_UPLOAD_TYPES));
				fileReference.browse(arr);
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void{
				fileReference.addEventListener(Event.SELECT,selectHandler);
			}
			
			private function selectHandler(event:Event):void
			{
				event.currentTarget.fileList as ArrayList;
				var file:FileReference;
				docCollection.removeAll();
				linkContainer.removeAllChildren();
				numOfDoc = fileReference.fileList.length;
				for(var i:Number = 0; i < fileReference.fileList.length; i++) {
					file = fileReference.fileList[i];
					file.addEventListener(Event.COMPLETE,onLoaded);
					file.load();
				}
			}
			
			private function onLoaded( event : Event) : void
			{
				var obj:Object = new Object();
				obj.fileType = event.currentTarget.type;
				obj.attachedDoc = event.currentTarget.data;
				obj.filePath = "";
				obj.name =  event.currentTarget.name+event.currentTarget.type;
					
				docCollection.addItem(obj);
				if(numOfDoc == docCollection.length){
					var fileListObj:Object = new Object;
					var sendNotif:Boolean = false;
					for(var index:int=0;index<docCollection.length;index++){
						if(SMEConstants.IMAGE_UPLOAD_TYPES_ARR.indexOf(docCollection.getItemAt(index).fileType)<0){
							sendNotif = true;
							var filePath:String = SMEModel.getinstance().appCompMetaData.tempFileDirectory;
							filePath += "\\"+SMEModel.getinstance().userProfileVO.userId+"\\"+docCollection.getItemAt(index).name;
							docCollection.getItemAt(index).filePath = filePath;
							fileListObj[filePath] = docCollection.getItemAt(index).attachedDoc;
						} 
					}
					if(sendNotif){
						facade.sendNotification(SMEConstants.SAVE_TEMP_FILES,fileListObj);
					}
				}
				var linkLable:Label = new Label();
				linkLable.styleName = "smeHyperLinkLabel";
				linkLable.useHandCursor = true;
				linkLable.mouseChildren = false;
				linkLable.buttonMode = true;
				linkLable.text = "doc"+String(docCollection.length);
				linkContainer.addChild(linkLable as DisplayObject);
				
			} 
			
		]]>
	</fx:Script>
	
	<fx:Declarations> 
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
<!--	<mx:TextInput id="loanAppln" text="{docName}"/>-->
	<mx:Button id="docLoanAppln" label="Upload" click="docLoanAppln_clickHandler(event)"/>
	<mx:HBox id="linkContainer" paddingLeft="0" paddingRight="0" paddingBottom="0" paddingTop="0" horizontalGap="0">
		
	</mx:HBox>
	
</mx:FormItem>
